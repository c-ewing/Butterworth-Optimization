--------------------------------------------------------------------------------
Profile data file 'optimization/loop_unroll_4/butterworth_O1.out' (creator: callgrind-3.21.0)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 42499
Trigger: Program termination
Profiled target:  ./optimization/loop_unroll_4/butterworth_O1 ts_sine.dat optimization/loop_unroll_4/removeme_O1.dat (PID 11441, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir               
--------------------------------------------------------------------------------
191,470 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                file:function
--------------------------------------------------------------------------------
191,470 (100.0%)  ???:0x00000a80 [/usr/lib/ld-2.28.so]
191,466 (100.0%)  ???:_dl_start [/usr/lib/ld-2.28.so]
112,388 (58.70%)  ???:_dl_sysdep_start [/usr/lib/ld-2.28.so]
103,591 (54.10%)  ???:dl_main [/usr/lib/ld-2.28.so]
103,182 (53.89%)  ???:_dl_new_object [/usr/lib/ld-2.28.so]
102,212 (53.38%)  ???:_dl_init_paths [/usr/lib/ld-2.28.so]
 99,801 (52.12%)  ???:handle_ld_preload [/usr/lib/ld-2.28.so]
 96,461 (50.38%)  ???:_dl_map_object_deps [/usr/lib/ld-2.28.so]
 90,106 (47.06%)  ???:_dl_receive_error [/usr/lib/ld-2.28.so]
 87,788 (45.85%)  ???:init_tls [/usr/lib/ld-2.28.so]
 86,640 (45.25%)  ???:_dl_relocate_object [/usr/lib/ld-2.28.so]
 77,326 (40.39%)  ???:0x00010520 [/root/Butterworth-Optimization/optimization/loop_unroll_4/butterworth_O1]
 76,193 (39.79%)  ???:(below main) [/usr/lib/libc-2.28.so]
 75,956 (39.67%)  /root/Butterworth-Optimization/optimization/loop_unroll_4/butterworth.c:main
 75,956 (39.67%)  optimization/loop_unroll_4/butterworth.c:main [/root/Butterworth-Optimization/optimization/loop_unroll_4/butterworth_O1]
 74,806 (39.07%)  ???:_dl_lookup_symbol_x [/usr/lib/ld-2.28.so]
 61,627 (32.19%)  ???:malloc [/usr/lib/ld-2.28.so]
 60,687 (31.70%)  ???:_IO_doallocbuf [/usr/lib/libc-2.28.so]
 60,676 (31.69%)  ???:_IO_file_xsputn@@GLIBC_2.4 [/usr/lib/libc-2.28.so]
 60,475 (31.58%)  ???:_IO_file_doallocate [/usr/lib/libc-2.28.so]
 60,412 (31.55%)  ???:puts [/usr/lib/libc-2.28.so]
 60,309 (31.50%)  ???:_IO_file_overflow@@GLIBC_2.4 [/usr/lib/libc-2.28.so]
 59,693 (31.18%)  ???:malloc_hook_ini [/usr/lib/libc-2.28.so]
 58,843 (30.73%)  ???:ptmalloc_init [/usr/lib/libc-2.28.so]
 58,815 (30.72%)  ???:_dl_addr [/usr/lib/libc-2.28.so]
 57,747 (30.16%)  ???:do_lookup_x [/usr/lib/ld-2.28.so]
 13,692 ( 7.15%)  ???:fopen@@GLIBC_2.4 [/usr/lib/libc-2.28.so]
 13,690 ( 7.15%)  ???:__fopen_internal [/usr/lib/libc-2.28.so]
 13,685 ( 7.15%)  ???:__fopen_internal'2 [/usr/lib/libc-2.28.so]
 13,036 ( 6.81%)  optimization/loop_unroll_4/butterworth.c:__fopen_internal
 13,028 ( 6.80%)  ???:fopen@@GLIBC_2.4'2 [/usr/lib/libc-2.28.so]
 12,752 ( 6.66%)  ???:check_match [/usr/lib/ld-2.28.so]
 12,395 ( 6.47%)  optimization/loop_unroll_4/butterworth.c:__fopen_internal'2
 11,621 ( 6.07%)  ???:__aeabi_uidivmod [/usr/lib/ld-2.28.so]
 11,409 ( 5.96%)  ???:getc [/usr/lib/libc-2.28.so]
 11,398 ( 5.95%)  ???:__uflow [/usr/lib/libc-2.28.so]
 11,362 ( 5.93%)  ???:_IO_default_uflow [/usr/lib/libc-2.28.so]
 11,071 ( 5.78%)  ???:__udivsi3 [/usr/lib/ld-2.28.so]
 10,911 ( 5.70%)  optimization/loop_unroll_4/butterworth.c:_IO_default_uflow
  9,605 ( 5.02%)  ???:fseek [/usr/lib/libc-2.28.so]
  9,455 ( 4.94%)  ???:strcmp [/usr/lib/ld-2.28.so]
  9,401 ( 4.91%)  ???:_dl_runtime_resolve [/usr/lib/ld-2.28.so]
  9,329 ( 4.87%)  optimization/loop_unroll_4/butterworth.c:fseek
  9,320 ( 4.87%)  ???:_dl_fixup [/usr/lib/ld-2.28.so]
  8,766 ( 4.58%)  ???:_dl_catch_exception [/usr/lib/ld-2.28.so]
  8,338 ( 4.35%)  ???:__GI___tunables_init [/usr/lib/ld-2.28.so]
  7,179 ( 3.75%)  ???:_dl_map_object [/usr/lib/ld-2.28.so]
  5,566 ( 2.91%)  optimization/loop_unroll_4/butterworth.c:butterworthFilterInit [/root/Butterworth-Optimization/optimization/loop_unroll_4/butterworth_O1]
  5,548 ( 2.90%)  optimization/loop_unroll_4/butterworth.c:main'2 [/root/Butterworth-Optimization/optimization/loop_unroll_4/butterworth_O1]
  4,577 ( 2.39%)  ???:openaux [/usr/lib/ld-2.28.so]
  4,294 ( 2.24%)  ???:open_verify.constprop.8 [/usr/lib/ld-2.28.so]
  3,958 ( 2.07%)  ???:_dl_new_object'2 [/usr/lib/ld-2.28.so]
  3,281 ( 1.71%)  ???:_dl_map_object_from_fd [/usr/lib/ld-2.28.so]
  2,992 ( 1.56%)  ???:_dl_name_match_p [/usr/lib/ld-2.28.so]
  2,773 ( 1.45%)  ???:do_preload [/usr/lib/ld-2.28.so]
  2,740 ( 1.43%)  ???:_dl_catch_error [/usr/lib/ld-2.28.so]
  2,667 ( 1.39%)  ???:map_doit [/usr/lib/ld-2.28.so]
  2,374 ( 1.24%)  ???:memcpy [/usr/lib/ld-2.28.so]
  2,300 ( 1.20%)  ???:version_check_doit [/usr/lib/ld-2.28.so]
  2,289 ( 1.20%)  ???:_dl_check_all_versions [/usr/lib/ld-2.28.so]
  2,273 ( 1.19%)  ???:_dl_check_map_versions [/usr/lib/ld-2.28.so]
  2,236 ( 1.17%)  ???:_dl_important_hwcaps [/usr/lib/ld-2.28.so]
  2,066 ( 1.08%)  ???:_dl_map_object_deps'2 [/usr/lib/ld-2.28.so]
  1,722 ( 0.90%)  ???:_dl_check_map_versions'2 [/usr/lib/ld-2.28.so]

--------------------------------------------------------------------------------
-- Auto-annotated source: optimization/loop_unroll_4/butterworth.c
--------------------------------------------------------------------------------
Ir           

-- line 53 ----------------------------------------
  .               fixedpoint_t a0 = lambda_squared + sqrt2_lambda + FIXEDPOINT_ONE;
  .               fixedpoint_t inv_a0 = fixedpoint_div(FIXEDPOINT_ONE, a0);
  .           
  .           #ifdef DEBUG
  .               printf("inv_a0:\t%s\n", fixedpoint_str(inv_a0));
  .           #endif
  .           
  .               // Calculate the coefficients:
  2 ( 0.00%)      filter->a0 = FIXEDPOINT_ONE; // Due to the normalizing around a0, this is always 1.0
  .               // a1 = (-2.0 * pow(lambda, 2) + 2.0) * inv_a0;
  3 ( 0.00%)      filter->a1 = fixedpoint_mul((fixedpoint_mul(fixedpoint_from_int(-2), lambda_squared) + FIXEDPOINT_TWO), inv_a0);
  .               // a2 = (pow(lambda, 2) - sqrt(2.0) * lambda + 1.0) * inv_a0;
  2 ( 0.00%)      filter->a2 = fixedpoint_mul((lambda_squared - sqrt2_lambda + FIXEDPOINT_ONE), inv_a0);
  .           
  .               // These are fixed for a second order Butterworth filter using the bilinear transform and adjusted using the value of a0.
  2 ( 0.00%)      filter->b0 = inv_a0;
  .               // b1 = 2.0 * inv_a0
  2 ( 0.00%)      filter->b1 = fixedpoint_mul(FIXEDPOINT_TWO, inv_a0);
  1 ( 0.00%)      filter->b2 = inv_a0;
  .           
  .           // Print the coefficients
  .           #ifdef DEBUG
  .               printf("b0:\t%s\n", fixedpoint_str(filter->b0));
  .               printf("b1:\t%s\n", fixedpoint_str(filter->b1));
  .               printf("b2:\t%s\n", fixedpoint_str(filter->b2));
  .           
  .               printf("a0:\t%s\n", fixedpoint_str(filter->a0));
  .               printf("a1:\t%s\n", fixedpoint_str(filter->a1));
  .               printf("a2:\t%s\n", fixedpoint_str(filter->a2));
  .           #endif
  .           
  .               // Initialize the previous input and output values to zero
  2 ( 0.00%)      filter->x1 = FIXEDPOINT_ZERO;
  1 ( 0.00%)      filter->x2 = FIXEDPOINT_ZERO;
  1 ( 0.00%)      filter->y1 = FIXEDPOINT_ZERO;
  1 ( 0.00%)      filter->y2 = FIXEDPOINT_ZERO;
  1 ( 0.00%)  }
5,548 ( 2.90%)  => optimization/loop_unroll_4/butterworth.c:main'2 (1x)
  .           
  .           // Function to apply Butterworth filter to a single input
  .           fixedpoint_t butterworthFilterApply(ButterworthFilter *f, fixedpoint_t input)
 10 ( 0.01%)  {
  .               // Calculate the output
  .               // output = (f->b0 * input + f->b1 * f->x1 + f->b2 * f->x2) - (f->a1 * f->y1 + f->a2 * f->y2);
265 ( 0.14%)      fixedpoint_t output = (fixedpoint_mul(f->b0, input) + fixedpoint_mul(f->b1, f->x1) + fixedpoint_mul(f->b2, f->x2)) - (fixedpoint_mul(f->a1, f->y1) + fixedpoint_mul(f->a2, f->y2));
  .           
  .               // Update the previous input and output values
  5 ( 0.00%)      f->x2 = f->x1;
  5 ( 0.00%)      f->x1 = input;
  .           
  5 ( 0.00%)      f->y2 = f->y1;
  5 ( 0.00%)      f->y1 = output;
  .           
  .               return output;
  5 ( 0.00%)  }
  .           
  .           uint16_t fixedpoint_to_uint16(fixedpoint_t input)
  1 ( 0.00%)  {
  .               // Adjust the range from [0,65535] of the input to [-32727, 32727] of the output
 12 ( 0.01%)      fixedpoint_t adjusted = fixedpoint_div(input, FIXEDPOINT_TWO);
  2 ( 0.00%)      fixedpoint_t scaled = adjusted + fixedpoint_from_int(32767);
  .           
  .           #ifdef DEBUG
  .               printf("fp val:\t%s\n", fixedpoint_str(input));
  .               printf("adj:\t%s\n", fixedpoint_str(adjusted));
  .               printf("uint16:\t%s\n", fixedpoint_str(scaled));
  .           #endif
  .               return fixedpoint_to_int(scaled);
  3 ( 0.00%)  }
  .           
  .           int main(int argc, char *argv[])
  4 ( 0.00%)  {
 23 ( 0.01%)      printf("Applying Butterworth Filter\n");
60,208 (31.45%)  => ???:puts (1x)
13,692 ( 7.15%)  => ???:fopen@@GLIBC_2.4 (1x)
2,029 ( 1.06%)  => ???:_dl_runtime_resolve (2x)
  .               if (argc < 3)
  .               {
  .                   printf("Usage: %s <input_file> <output_file>\n", argv[0]);
  .                   return 1;
  .               }
  .           
  1 ( 0.00%)      FILE *inputFile = fopen(argv[1], "r");
  7 ( 0.00%)      FILE *outputFile = fopen(argv[2], "w");
13,028 ( 6.80%)  => ???:fopen@@GLIBC_2.4'2 (1x)
  .           
  4 ( 0.00%)      if (inputFile == NULL || outputFile == NULL)
  .               {
  .                   printf("Failed to open input or output file\n");
  .                   return 1;
  .               }
  .           
  .               // Count the number of lines in the input file
  .               // TODO: Optimization: dont scan the file, instead apply as reading the file
  1 ( 0.00%)      size_t numSamples = 0;
  .               int c;
 70 ( 0.04%)      while ((c = fgetc(inputFile)) != EOF)
9,605 ( 5.02%)  => ???:fseek (1x)
1,026 ( 0.54%)  => ???:_dl_runtime_resolve (1x)
216 ( 0.11%)  => ???:getc'2 (5x)
  .               {
  1 ( 0.00%)          if (c == '\n')
  .                   {
  2 ( 0.00%)              numSamples++;
  .                   }
  .               }
  .               numSamples++; // Add one for the last line
  .               // Reset the file pointer to the beginning of the file
  .               fseek(inputFile, 0, SEEK_SET);
  .           
  .               // Allocate memory for input and output buffers
 45 ( 0.02%)      fixedpoint_t *inputBuffer = (fixedpoint_t *)malloc(numSamples * sizeof(fixedpoint_t));
5,566 ( 2.91%)  => optimization/loop_unroll_4/butterworth.c:butterworthFilterInit (1x)
2,109 ( 1.10%)  => ???:_dl_runtime_resolve (2x)
1,149 ( 0.60%)  => ???:__isoc99_fscanf (1x)
460 ( 0.24%)  => ???:malloc (2x)
  .               fixedpoint_t *outputBuffer = (fixedpoint_t *)malloc(numSamples * sizeof(fixedpoint_t));
  .           
  .               // Read input samples from file
  .               uint16_t sample;
  .               for (size_t i = 0; i < numSamples; i++)
  .               {
  .                   if (fscanf(inputFile, "%hu", &sample) != 1)
  .                   {
-- line 164 ----------------------------------------
-- line 168 ----------------------------------------
  .                   else
  .                   {
  .                       inputBuffer[i] = fixedpoint_from_int(sample);
  .                   }
  .               }
  .           
  .               // Initialize the filter
  .               ButterworthFilter ButterworthFilter;
  2 ( 0.00%)      butterworthFilterInit(&ButterworthFilter);
  .           
  .               // Apply Butterworth filter, unrolling the loop for performance
  6 ( 0.00%)      for (size_t i = 0; i < numSamples; i += 4)
  .               {
  4 ( 0.00%)          outputBuffer[i] = butterworthFilterApply(&ButterworthFilter, inputBuffer[i]);
 60 ( 0.03%)  => optimization/loop_unroll_4/butterworth.c:butterworthFilterApply (1x)
  4 ( 0.00%)          outputBuffer[i + 1] = butterworthFilterApply(&ButterworthFilter, inputBuffer[i + 1]);
 60 ( 0.03%)  => optimization/loop_unroll_4/butterworth.c:butterworthFilterApply (1x)
  4 ( 0.00%)          outputBuffer[i + 2] = butterworthFilterApply(&ButterworthFilter, inputBuffer[i + 2]);
 60 ( 0.03%)  => optimization/loop_unroll_4/butterworth.c:butterworthFilterApply (1x)
  6 ( 0.00%)          outputBuffer[i + 3] = butterworthFilterApply(&ButterworthFilter, inputBuffer[i + 3]);
 60 ( 0.03%)  => optimization/loop_unroll_4/butterworth.c:butterworthFilterApply (1x)
  .               }
  .           
  .               // Apply Butterworth filter to the last samples if there is an odd number of samples
 14 ( 0.01%)      for (size_t i = numSamples - (numSamples % 4); i < numSamples; i++)
  .               {
  4 ( 0.00%)          outputBuffer[i] = butterworthFilterApply(&ButterworthFilter, inputBuffer[i]);
 60 ( 0.03%)  => optimization/loop_unroll_4/butterworth.c:butterworthFilterApply (1x)
  .               }
  .           
  .               // Write output samples to file
  .               for (size_t i = 0; i < numSamples; ++i)
  .               {
 33 ( 0.02%)          fprintf(outputFile, "%hu\n", fixedpoint_to_uint16(outputBuffer[i]));
2,150 ( 1.12%)  => ???:_dl_runtime_resolve (2x)
1,708 ( 0.89%)  => ???:fclose@@GLIBC_2.4 (1x)
1,091 ( 0.57%)  => ???:fprintf (1x)
204 ( 0.11%)  => ???:puts (1x)
 18 ( 0.01%)  => optimization/loop_unroll_4/butterworth.c:fixedpoint_to_uint16 (1x)
  .               }
  .           
  .               printf("Finished Applying Butterworth Filter\n");
  .           
  .               // Cleanup
  .               fclose(inputFile);
  5 ( 0.00%)      fclose(outputFile);
1,084 ( 0.57%)  => ???:fclose@@GLIBC_2.4'2 (1x)
  .               free(inputBuffer);
  .               free(outputBuffer);
  .           
  .               return 0;
  .           }
--------------------------------------------------------------------------------
-- Auto-annotated source: /root/Butterworth-Optimization/optimization/loop_unroll_4/butterworth.c
--------------------------------------------------------------------------------
  No information has been collected for /root/Butterworth-Optimization/optimization/loop_unroll_4/butterworth.c

--------------------------------------------------------------------------------
Ir           
--------------------------------------------------------------------------------
576 ( 0.30%)  events annotated

